openapi: 3.0.3
info:
  title: tf-idf api
  version: 1.0.0
  description: Lesta start. tf-idf project
paths:
  /api/auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/logout/:
    get:
      operationId: auth_logout_retrieve
      description: Logout
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/v1/collections/:
    get:
      operationId: v1_collections_list
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionRetrieve'
          description: ''
    post:
      operationId: v1_collections_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
  /api/v1/collections/{id}/:
    get:
      operationId: v1_collections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
          description: ''
    delete:
      operationId: v1_collections_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/collections/{id}/document/{document_id}/:
    post:
      operationId: v1_collections_document_create
      summary: Add/delete document to collection
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Collection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Collection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Collection'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionRetrieve'
          description: Added. Collection in response
        '204':
          description: Deleted.
    delete:
      operationId: v1_collections_document_destroy
      summary: Add/delete document to collection
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionRetrieve'
          description: Added. Collection in response
        '204':
          description: Deleted.
  /api/v1/collections/{id}/statistics/:
    get:
      operationId: v1_collections_statistics_retrieve
      summary: Collection statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this collection.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStats'
          description: Collection statistics
  /api/v1/documents/:
    get:
      operationId: v1_documents_list
      summary: Document list
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentList'
          description: Document list
    post:
      operationId: v1_documents_create
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                document:
                  type: string
                  format: binary
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    type: string
          description: ''
  /api/v1/documents/{id}/:
    get:
      operationId: v1_documents_retrieve
      summary: Document statistics
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentRetrieve'
          description: Document statistics
    delete:
      operationId: v1_documents_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/documents/{id}/statistics/:
    get:
      operationId: v1_documents_statistics_retrieve
      summary: Document statistics by collection.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this document.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStats'
          description: Document statistics
  /api/v1/metrics/:
    get:
      operationId: v1_metrics_retrieve
      summary: Metrics
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metric'
          description: Metrics
  /api/v1/status/:
    get:
      operationId: v1_status_retrieve
      description: Status
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/v1/users/:
    get:
      operationId: v1_users_list
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: v1_users_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPost'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPost'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPost'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPost'
          description: ''
    patch:
      operationId: v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserPost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPost'
          description: ''
    delete:
      operationId: v1_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Пользователь.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: v1_users_me_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/register/:
    post:
      operationId: v1_users_register_create
      summary: Add user
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPost'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                  password:
                    type: string
          description: ''
  /api/v1/users/set_password/:
    post:
      operationId: v1_users_set_password_create
      summary: Change password for current user
      tags:
      - v1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                new_password:
                  type: string
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
  /api/v1/version/:
    get:
      operationId: v1_version_retrieve
      description: Version
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
          description: ''
        '401':
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
          description: ''
components:
  schemas:
    Collection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        documents:
          type: array
          items:
            type: integer
            title: Документы
          title: Документы
      required:
      - id
    CollectionRetrieve:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentList'
      required:
      - documents
      - id
    CollectionStats:
      type: object
      properties:
        collection_stats:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              $ref: '#/components/schemas/WordStat'
      required:
      - collection_stats
    DocumentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
      required:
      - id
      - title
    DocumentRetrieve:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content:
          type: string
          readOnly: true
      required:
      - content
      - id
    Metric:
      type: object
      properties:
        files_processed:
          type: integer
        min_time_processed:
          type: number
          format: double
        avg_time_processed:
          type: number
          format: double
        max_time_processed:
          type: number
          format: double
        latest_file_processed:
          type: number
          format: double
        max_file_size:
          type: integer
        min_file_size:
          type: integer
        avg_file_size:
          type: integer
      required:
      - avg_file_size
      - avg_time_processed
      - files_processed
      - latest_file_processed
      - max_file_size
      - max_time_processed
      - min_file_size
      - min_time_processed
    PatchedUserPost:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        password:
          type: string
          maxLength: 150
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 150
      required:
      - id
      - username
    UserPost:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
        password:
          type: string
          maxLength: 150
      required:
      - password
      - username
    WordStat:
      type: object
      properties:
        tf:
          type: number
          format: double
        idf:
          type: number
          format: double
      required:
      - idf
      - tf
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
